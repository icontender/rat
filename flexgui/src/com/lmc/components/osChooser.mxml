<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" width="498" height="158" creationComplete="init()" >
	
	
	<mx:Script>
		<![CDATA[
		
		    import mx.collections.ArrayCollection;
		    import mx.events.ListEvent;
		    import com.racemi.qa.utils.dynaXMLRPCObject;
		    import mx.controls.Alert;
		    import mx.utils.ObjectUtil;
			[Bindable]
			//private ostype:ArrayCollection;
			[Bindable] private var osfamily:ArrayCollection = new ArrayCollection;
			[Bindable] private var distros:ArrayCollection = new ArrayCollection;
			[Bindable] private var ostype:ArrayCollection;
			[Bindable] private var familyvers:ArrayCollection  = new ArrayCollection;
			[Bindable] private var dynaweb:dynaXMLRPCObject;
			private var blank:ArrayCollection = new ArrayCollection();
			[Bindable] private var profiles:ArrayCollection;
			[Bindable] private var jstemps:ArrayCollection;
			[Bindable] private var temps:ArrayCollection = new ArrayCollection();
			[Bindable] private var dp:dynaXMLRPCObject;
			private var selectedos:String = "";
			
			public function get selectedItem():String{
				return this.dgdistros.selectedItem as String;	
			}
			
			private function setOS(event:ListEvent):void{
				selectedos = distros.getItemAt(event.rowIndex) as String;
			}
			public function init():void{
				ostype = makeunique(profiles, 'ostype');
			}
			public function set dataProvider(datap:dynaXMLRPCObject):void{
				this.dp = datap;
				profiles = dp.profiles;
				dp.getjstemplates();
				jstemps = dp.jstemplates;
				
			}
		
			private function oschange(event:ListEvent):void{
				distros.removeAll();
				osfamily.removeAll();
				temps.removeAll();
				
				//osfamily.refresh();
				
				//distros.refresh();
			
				// selected OS
				
				var os:String = ostype.getItemAt(event.rowIndex) as String;
				for each (var p in profiles){
					if (p['ostype'] == os){
						osfamily.addItem(p);
					}
				}
				osfamily = makeunique(osfamily, 'familyname');
			}
			private function familychange(event:ListEvent):void{
				distros.removeAll();
				temps.removeAll();
				//distros.refresh();
				// this is the os that was picked
				var osname:String = osfamily.getItemAt(event.rowIndex) as String;
				for each (var p in profiles){
					if (p['familyname'] == osname){
						distros.addItem(p);
					}
				}
				distros = makeunique(distros, 'distro');
				
				
			}
			private function profileChange(event:ListEvent):void{
				temps.removeAll();
				var osname:String = distros.getItemAt(event.rowIndex) as String;
				if (osname.toLowerCase().search("sol") !=-1){
					temps = ArrayCollection(ObjectUtil.copy(jstemps));
					dgtemplate.findString("racemibase");
				}
				else {
					for each (var p in profiles){
						if (p["distro"] == osname){
							temps.addItem({name:p['familyvers']});
						}
					}
					
					
				}
			}
			private function makeunique(data:ArrayCollection, field:String):ArrayCollection{
				// this functions creates a list but only selects one from each OS
				var item:String = "";
				var items:ArrayCollection = new ArrayCollection();
				
				for each (var i in data){
					item = i[field];
					// if the array already contains the item then don't add it
					if (items.contains(item)){
						continue;
					}
					else {
						items.addItem(item);
					}
				}
				return items;
				
			}	
			public function doCheck():Boolean{
				// need to make sure everything was selected
				
				if (dgtemplate.selectedItem == null){
					return false;
				}
				if (dgdistros.selectedItem == null){
					return false;
				}
				return true;
				//var distro:String = this.dgdistros.selectedItem as String;
				//var template:String = this.dgtemplate.selectedItem['name'] as String;
				//if (distro && template){
				//	return true;
				//}
				//else{
				//	return false;
				//}
			}
			public function getSelectedItems():Object{
				// this will pass all the selected items in each dg window (4 total)
				var ostype:String = dgostype.selectedItem as String;
				var distro:String = dgdistros.selectedItem as String;
				var template:String = dgtemplate.selectedItem['name'] as String;
				var family:String = dgfamily.selectedItem as String;
				
				return {ostype: ostype, family: family, distro: distro, template: template};
			}
			
		]]>
	</mx:Script>
	
	
	
	<mx:DataGrid x="1" y="1" id="dgostype" dataProvider="{ostype}" width="99" change="oschange(event)"  height="156" textAlign="left">
		<mx:columns>
			<mx:DataGridColumn headerText="OS" dataField="ostype"  />
			
		</mx:columns>
	</mx:DataGrid>
	<mx:DataGrid x="98" y="1" dataProvider="{osfamily}" id="dgfamily" width="101" change="familychange(event)" height="156" textAlign="left">
		<mx:columns>
			<mx:DataGridColumn headerText="OS Family"  />
			
		</mx:columns>
	</mx:DataGrid>
	<mx:DataGrid x="339" y="1" id="dgtemplate" dataProvider="{temps}" width="159" height="156" textAlign="left" >
		<mx:columns>
			<mx:DataGridColumn headerText="Template" dataField="name"  />
			
		</mx:columns>
	</mx:DataGrid>
	<mx:DataGrid x="199" y="1" id="dgdistros" dataProvider="{distros}" change="profileChange(event)" width="140" height="156"  textAlign="left">
		<mx:columns>
			<mx:DataGridColumn headerText="Distro List"  />
			
		</mx:columns>
	</mx:DataGrid>
</mx:Canvas>
